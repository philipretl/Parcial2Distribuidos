/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package AdministradorB;


import AdministradorA.GuiAdminA;
import AdministradorA.UtilidadesRegistroCAdminA;
import cliente.*;
import java.rmi.RemoteException;
import java.util.logging.Level;
import java.util.logging.Logger;
import sop_rmi.*;

/**
 *
 * @author philipretl
 */
public class GuiAdminB extends javax.swing.JFrame {
    ConexionB loginB;
    GestionAdmBInt srvB;
    AdministradorB adminB;
    /**
     * Creates new form GuiCliente
     */
    public GuiAdminB() {
        initComponents();
        initComponents();        
        loginB= new ConexionB(this);  
        loginB.setVisible(true);
        adminB = new AdministradorB();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblLogin = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        txtUser = new javax.swing.JTextField();
        lblUser = new javax.swing.JLabel();
        lblPass = new javax.swing.JLabel();
        txtPass = new javax.swing.JTextField();
        btnIngresar = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jPanel3 = new javax.swing.JPanel();
        lblModCred = new javax.swing.JLabel();
        cbxOpcion = new javax.swing.JComboBox<>();
        btnCancelar = new javax.swing.JToggleButton();
        btnConfirmar = new javax.swing.JToggleButton();
        rbtnModCred = new javax.swing.JRadioButton();
        btnSalir = new javax.swing.JToggleButton();
        btnLimpiar = new javax.swing.JToggleButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtConsola = new javax.swing.JTextArea();
        btnConUsuario = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblLogin.setBackground(new java.awt.Color(71, 160, 249));
        lblLogin.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setText("Administracion Servidor Control Salida y Entrada");

        txtUser.setText("aaaaaaaa");
        txtUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUserActionPerformed(evt);
            }
        });

        lblUser.setText("login");

        lblPass.setText("Contraseña");

        txtPass.setText("aaaaaaaa");

        btnIngresar.setText("Ingresar");
        btnIngresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIngresarActionPerformed(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblModCred.setText("Modificar Credenciales");
        lblModCred.setEnabled(false);

        cbxOpcion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Login", "Contraseña", "Login y Contraseña", " " }));
        cbxOpcion.setEnabled(false);
        cbxOpcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxOpcionActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.setEnabled(false);
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnConfirmar.setText("Confirmar");
        btnConfirmar.setEnabled(false);
        btnConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmarActionPerformed(evt);
            }
        });

        rbtnModCred.setEnabled(false);
        rbtnModCred.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnModCredActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(rbtnModCred)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                        .addComponent(lblModCred, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(btnCancelar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnConfirmar))
                            .addComponent(cbxOpcion, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblModCred)
                    .addComponent(rbtnModCred))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbxOpcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancelar)
                    .addComponent(btnConfirmar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnSalir.setText("Salir");
        btnSalir.setEnabled(false);
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        btnLimpiar.setText("Limpiar Casillas ");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout lblLoginLayout = new javax.swing.GroupLayout(lblLogin);
        lblLogin.setLayout(lblLoginLayout);
        lblLoginLayout.setHorizontalGroup(
            lblLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(lblLoginLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(lblLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator2)
                    .addGroup(lblLoginLayout.createSequentialGroup()
                        .addGroup(lblLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(lblLoginLayout.createSequentialGroup()
                                .addGroup(lblLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jSeparator1)
                                    .addGroup(lblLoginLayout.createSequentialGroup()
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 454, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 126, Short.MAX_VALUE)))
                                .addGap(18, 18, 18))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, lblLoginLayout.createSequentialGroup()
                                .addGroup(lblLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblPass, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblUser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(26, 26, 26)
                                .addGroup(lblLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtPass)
                                    .addComponent(txtUser, javax.swing.GroupLayout.DEFAULT_SIZE, 241, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(lblLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(lblLoginLayout.createSequentialGroup()
                                        .addComponent(btnIngresar, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, lblLoginLayout.createSequentialGroup()
                                        .addComponent(btnLimpiar)
                                        .addGap(30, 30, 30)))
                                .addGap(7, 7, 7)))
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(6, 6, 6))))
        );
        lblLoginLayout.setVerticalGroup(
            lblLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, lblLoginLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(lblLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(lblLoginLayout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(lblLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblUser)
                            .addComponent(txtUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnIngresar)
                            .addComponent(btnSalir))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(lblLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPass)
                            .addComponent(txtPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, Short.MAX_VALUE))
                    .addGroup(lblLoginLayout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 4, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel2.setBackground(new java.awt.Color(71, 160, 249));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel4.setText("Consola");

        txtConsola.setColumns(20);
        txtConsola.setRows(5);
        jScrollPane1.setViewportView(txtConsola);

        btnConUsuario.setText("Consultar Usuarios");
        btnConUsuario.setEnabled(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnConUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(btnConUsuario))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(lblLogin, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lblLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUserActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUserActionPerformed
    
    public boolean conexion(String ip,String puerto){
        boolean flag=true;
        
        System.out.println("ip: "+ ip + "puerto: " + puerto );
        
        try{
            int numPuertoRMIRegistry=0;
            String direccionIpRMIRegistry=ip;
            numPuertoRMIRegistry = Integer.parseInt(puerto);
            //acomodar el objeto que me voy a conectar 
            srvB= (GestionAdmBInt) UtilidadesRegistroCAdminB.obtenerObjRemoto(numPuertoRMIRegistry, direccionIpRMIRegistry,"ServidorB");
            
            
        }catch(Exception e){
           
            System.out.println("No se pudo registrar la conexion..." + flag);
            System.out.println(e.getMessage());
        } 
        
        if(srvB==null){
            flag = false;
        }
    
        return flag;
    }
    
    private void activarGenerales() {
         txtConsola.setText("$ Opciones generales activadas");
        txtUser.setEnabled(!true);
        txtPass.setEnabled(!true);
        lblUser.setText("login");
        lblPass.setText("contraseña");
        btnSalir.setEnabled(true);
        btnCancelar.setSelected(false);
        cbxOpcion.setEnabled(!true);
        btnCancelar.setEnabled(!true);
        btnConfirmar.setEnabled(!true);
        rbtnModCred.setSelected(false);
        btnLimpiar.setEnabled(!true);
        //btnConUsuario.setEnabled(true);
        txtUser.setText("");
        txtPass.setText("");
        rbtnModCred.setEnabled(true);
        lblModCred.setEnabled(true);
        btnConUsuario.setEnabled(true);

    }

    private void desactivarGenerales(){
        //btnConUsuario.setEnabled(!true);
        //btnIngresar1.setEnabled(true);
        btnSalir.setEnabled(false);
        btnSalir.setSelected(false);
        btnLimpiar.setEnabled(!true);
        txtUser.setEnabled(!true);
        txtPass.setEnabled(!true);
        rbtnModCred.setEnabled(false);
        lblModCred.setEnabled(false);
        btnConUsuario.setEnabled(!true);
    
    }
     private void activarIniciales(){
        txtUser.setEnabled(true);
        txtPass.setEnabled(true);
        btnIngresar.setEnabled(true);
        btnLimpiar.setEnabled(true);
    }

    private void btnIngresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIngresarActionPerformed
      
        boolean flag=false;// esta bandera es la que guarda si es verdadero o no el logi y la contraseña
        txtConsola.setText("");
         
        if(txtUser.getText().equals("") || txtPass.getText().equals("") ){
           
            txtConsola.setText("$ Error el usuario o la contraseña no pueden ser vacios");
            
        }else{
        
            //if(txtUser.getText().length()!=8 || txtPass.getText().length()!=8 ){
            if(txtUser.getText().length()<8 & txtUser.getText().length()>15 & txtPass.getText().length()<8 & txtPass.getText().length()>15){    
                txtConsola.setText("$ Error \n el usuario o la contraseña deben estar entre 15 y 8 caracteres"); 
            }else{
                adminB.setClave(txtPass.getText());
                adminB.setLogin(txtUser.getText());
                
                
                try {
                    flag=srvB.AccesoAdministrador(adminB);//consultar el usuario y contraseña en la flag;
                } catch (RemoteException ex) {
                    Logger.getLogger(GuiAdminB.class.getName()).log(Level.SEVERE, null, ex);
                }
                
                
                if(flag==false){
                    txtConsola.setText("$ Error usuario o contraseña no valido");
                    
                    txtUser.setText("");
                    txtPass.setText("");
                    
                }else{// ingreso al sistema
                   activarGenerales();
                   btnIngresar.setEnabled(false);
                   txtConsola.setText("$ Ingreso al sistema exitoso!");
                   
                
                }
            }
                
        }


    }//GEN-LAST:event_btnIngresarActionPerformed


    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        // TODO add your handling code here
        btnLimpiar.setSelected(false);
        txtUser.setText("");
        txtPass.setText("");
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
       txtConsola.setText("$ Saliendo del sistema....");
        desactivarGenerales();  
        activarIniciales();

    }//GEN-LAST:event_btnSalirActionPerformed

    private void rbtnModCredActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnModCredActionPerformed
        // TODO add your handling code here:
       int opcion;
    
     
        if(rbtnModCred.isSelected()){
            cbxOpcion.setEnabled(true);
            btnCancelar.setEnabled(true);
            btnConfirmar.setEnabled(true);
            desactivarGenerales();
            
            txtConsola.setText("$ Modificar Credenciales (Opciones generales desactivadas)\n  Ingrese las nuevas credenciales segun su seleccion \n  Presione confirmar para actualizar los datos \n  cancelar para deshacer el cambio");
            btnLimpiar.setEnabled(true);  
            
            opcion=cbxOpcion.getSelectedIndex();
            switch(opcion){
               case 0:
                    lblUser.setText("login (nuevo)");
                    lblPass.setText("contraseña");
                    txtUser.setEnabled(true);
                    txtPass.setEnabled(!true);
                   
                    break;
                case 1:
                    lblUser.setText("login");
                    lblPass.setText("contraseña (nueva)");
                    txtPass.setEnabled(true);
                    txtUser.setEnabled(!true);
                    break;
                case 2:
                    lblUser.setText("login (nuevo)");
                    lblPass.setText("contraseña (nueva)");
                    txtUser.setEnabled(true);
                    txtPass.setEnabled(true);
                    break;
            }
        
        }else{
            txtConsola.setText("");
            txtConsola.setText("$ Opciones generales activadas");
            activarGenerales();
        
        
        }
    }//GEN-LAST:event_rbtnModCredActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:
       txtConsola.setText("");
      //btnConUsuario.setEnabled(true);
      activarGenerales();

    }//GEN-LAST:event_btnCancelarActionPerformed

    private void cbxOpcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxOpcionActionPerformed
        // TODO add your handling code here:
        int opcion;
        opcion = cbxOpcion.getSelectedIndex();
        switch (opcion) {
            case 0:
                lblUser.setText("login (nuevo)");
                lblPass.setText("contraseña ");
                txtUser.setEnabled(true);
                txtPass.setEnabled(!true);

                break;
            case 1:
                lblUser.setText("login");
                lblPass.setText("contraseña (nueva)");
                txtPass.setEnabled(true);
                txtUser.setEnabled(!true);
                break;
            case 2:
                lblUser.setText("login (nuevo)");
                lblPass.setText("contraseña (nueva)");
                txtUser.setEnabled(true);
                txtPass.setEnabled(true);
                break;
        }
    }//GEN-LAST:event_cbxOpcionActionPerformed

    private void btnConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmarActionPerformed
        boolean flag=false;
        String antiguo=adminB.getLogin();
        btnConfirmar.setSelected(false);
        
        switch(cbxOpcion.getSelectedIndex()){
            case 0:
        
                try {
                    flag=srvB.modificarCredenciales(antiguo,txtUser.getText(),"",cbxOpcion.getSelectedIndex());
                } catch (RemoteException ex) {
                    Logger.getLogger(GuiAdminB.class.getName()).log(Level.SEVERE, null, ex);
                }
                if(!flag){
                    txtConsola.setText("$ Error \n  El login debe estar entre 8 y 15 caracteres");
                }else{
                    adminB.setLogin(txtUser.getText());
                    txtConsola.setText("$ Login modificado");
                }
                
                break;
            case 1:
                try {
                    flag=srvB.modificarCredenciales(antiguo,"",txtPass.getText(),cbxOpcion.getSelectedIndex());
                } catch (RemoteException ex) {
                    Logger.getLogger(GuiAdminB.class.getName()).log(Level.SEVERE, null, ex);
                }
                if(!flag){
                    txtConsola.setText("$ Error \n  La contraseña debe estar entre 8 y 15 caracteres");
                }else{
                    adminB.setClave(txtPass.getText());
                    txtConsola.setText("$ contraseña modificado");
                }
                break;
            case 2:
               
        
                try {
                    flag=srvB.modificarCredenciales(antiguo,txtUser.getText(),txtPass.getText(),cbxOpcion.getSelectedIndex());
                } catch (RemoteException ex) {
                    Logger.getLogger(GuiAdminB.class.getName()).log(Level.SEVERE, null, ex);
                }
        
            
                if(!flag){
                    txtConsola.setText("$ Error \n  El login y contraseña debe estar entre 8 y 15 caracteres");
                }else{
                    adminB.setLogin(txtUser.getText());
                    adminB.setClave(txtPass.getText());
                    txtConsola.setText("$ Login y contraseña modificado");
                }
                break;
        
        
        
        }
        
        
        txtUser.setText("");
        txtPass.setText("");
    }//GEN-LAST:event_btnConfirmarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GuiAdminB.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GuiAdminB.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GuiAdminB.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GuiAdminB.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GuiAdminB().setVisible(false);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton btnCancelar;
    private javax.swing.JButton btnConUsuario;
    private javax.swing.JToggleButton btnConfirmar;
    private javax.swing.JButton btnIngresar;
    private javax.swing.JToggleButton btnLimpiar;
    private javax.swing.JToggleButton btnSalir;
    private javax.swing.JComboBox<String> cbxOpcion;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JPanel lblLogin;
    private javax.swing.JLabel lblModCred;
    private javax.swing.JLabel lblPass;
    private javax.swing.JLabel lblUser;
    private javax.swing.JRadioButton rbtnModCred;
    private javax.swing.JTextArea txtConsola;
    private javax.swing.JTextField txtPass;
    private javax.swing.JTextField txtUser;
    // End of variables declaration//GEN-END:variables
}
