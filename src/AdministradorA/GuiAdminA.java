/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package AdministradorA;

import sop_rmi.GestionAdmAImpl;
import java.awt.BorderLayout;
import java.rmi.RemoteException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import sop_rmi.*;

/**
 *
 * @author philipretl
 */
public class GuiAdminA extends javax.swing.JFrame {
    ConexionA loginA;
    GestionAdmAInt srvA;
    AdministradorA adminA;
    String antiguo;
    /**
     * Creates new form GuiCliente
     */
    public GuiAdminA() {
        initComponents();        
        loginA= new ConexionA(this);  
        loginA.setVisible(true);
        adminA = new AdministradorA();
        //radiobuttons modificar
        rbtnCodigo.setVisible(!true);
        rbtnNombres.setVisible(!true);
        rbtnApellidos.setVisible(!true);
        rbtnRol.setVisible(!true);
        antiguo="";
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtConsola = new javax.swing.JTextArea();
        jPanel3 = new javax.swing.JPanel();
        jSeparator3 = new javax.swing.JSeparator();
        lblCodigo = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        lblNombre = new javax.swing.JLabel();
        txtNombres = new javax.swing.JTextField();
        lblApellidos = new javax.swing.JLabel();
        txtApellidos = new javax.swing.JTextField();
        lblRol = new javax.swing.JLabel();
        cbxRol = new javax.swing.JComboBox<>();
        btnConfirmarCod = new javax.swing.JToggleButton();
        btnConfirmarCrud = new javax.swing.JToggleButton();
        btnLimpiarCrud = new javax.swing.JToggleButton();
        rbtnCodigo = new javax.swing.JRadioButton();
        rbtnNombres = new javax.swing.JRadioButton();
        rbtnApellidos = new javax.swing.JRadioButton();
        rbtnRol = new javax.swing.JRadioButton();
        rbtnIngresarUsu = new javax.swing.JRadioButton();
        rbtnModificarUsu = new javax.swing.JRadioButton();
        rbtnEliminarUsu = new javax.swing.JRadioButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        txtUser = new javax.swing.JTextField();
        lblUser = new javax.swing.JLabel();
        lblPass = new javax.swing.JLabel();
        txtPass = new javax.swing.JTextField();
        btnIngresar1 = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jPanel4 = new javax.swing.JPanel();
        lblModCred = new javax.swing.JLabel();
        cbxOpcion = new javax.swing.JComboBox<>();
        btnCancelar = new javax.swing.JToggleButton();
        btnConfirmar = new javax.swing.JToggleButton();
        rbtnModCred = new javax.swing.JRadioButton();
        btnSalir = new javax.swing.JToggleButton();
        btnLimpiar = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(71, 160, 249));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel4.setText("Consola");

        txtConsola.setColumns(20);
        txtConsola.setRows(5);
        jScrollPane1.setViewportView(txtConsola);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 358, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1)
                .addContainerGap())
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblCodigo.setText("Codigo");
        lblCodigo.setEnabled(false);

        txtCodigo.setEnabled(false);
        txtCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCodigoActionPerformed(evt);
            }
        });

        lblNombre.setText("Nombres");
        lblNombre.setEnabled(false);

        txtNombres.setEnabled(false);
        txtNombres.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombresActionPerformed(evt);
            }
        });

        lblApellidos.setText("Apellidos");
        lblApellidos.setEnabled(false);

        txtApellidos.setEnabled(false);
        txtApellidos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtApellidosActionPerformed(evt);
            }
        });

        lblRol.setText("Rol");
        lblRol.setEnabled(false);

        cbxRol.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Administrativo", "Profesor", "Estudiante" }));
        cbxRol.setEnabled(false);

        btnConfirmarCod.setText("Confirmar Codigo");
        btnConfirmarCod.setEnabled(false);
        btnConfirmarCod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmarCodActionPerformed(evt);
            }
        });

        btnConfirmarCrud.setText("Confirmar");
        btnConfirmarCrud.setEnabled(false);
        btnConfirmarCrud.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmarCrudActionPerformed(evt);
            }
        });

        btnLimpiarCrud.setText("Limpiar");
        btnLimpiarCrud.setEnabled(false);
        btnLimpiarCrud.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarCrudActionPerformed(evt);
            }
        });

        rbtnCodigo.setEnabled(false);
        rbtnCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnCodigoActionPerformed(evt);
            }
        });

        rbtnNombres.setEnabled(false);
        rbtnNombres.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnNombresActionPerformed(evt);
            }
        });

        rbtnApellidos.setEnabled(false);
        rbtnApellidos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnApellidosActionPerformed(evt);
            }
        });

        rbtnRol.setEnabled(false);
        rbtnRol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnRolActionPerformed(evt);
            }
        });

        rbtnIngresarUsu.setText("Ingresar Usuario");
        rbtnIngresarUsu.setEnabled(false);
        rbtnIngresarUsu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnIngresarUsuActionPerformed(evt);
            }
        });

        rbtnModificarUsu.setText("Modificar Usuario");
        rbtnModificarUsu.setEnabled(false);
        rbtnModificarUsu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnModificarUsuActionPerformed(evt);
            }
        });

        rbtnEliminarUsu.setText("Eliminar Usuario");
        rbtnEliminarUsu.setEnabled(false);
        rbtnEliminarUsu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnEliminarUsuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(rbtnIngresarUsu)
                .addGap(43, 43, 43)
                .addComponent(rbtnModificarUsu)
                .addGap(49, 49, 49)
                .addComponent(rbtnEliminarUsu)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jSeparator3)
                .addContainerGap())
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(rbtnCodigo)
                        .addComponent(rbtnNombres)
                        .addComponent(rbtnApellidos, javax.swing.GroupLayout.Alignment.TRAILING))
                    .addComponent(rbtnRol, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblRol)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblCodigo)
                            .addComponent(lblNombre)
                            .addComponent(lblApellidos)
                            .addComponent(txtApellidos)
                            .addComponent(txtNombres)
                            .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addComponent(cbxRol, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(124, 124, 124))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(btnLimpiarCrud, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnConfirmarCrud, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(btnConfirmarCod, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(76, 76, 76))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbtnIngresarUsu)
                    .addComponent(rbtnModificarUsu)
                    .addComponent(rbtnEliminarUsu))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblCodigo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnConfirmarCod)
                    .addComponent(rbtnCodigo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblNombre)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNombres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rbtnNombres))
                .addGap(18, 18, 18)
                .addComponent(lblApellidos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rbtnApellidos))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblRol)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnConfirmarCrud)
                            .addComponent(btnLimpiarCrud))
                        .addContainerGap())
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbxRol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rbtnRol))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        jPanel1.setBackground(new java.awt.Color(71, 160, 249));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setText("Administracion Servidor Control Salida y Entrada");

        txtUser.setText("aaaaaaaa");
        txtUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUserActionPerformed(evt);
            }
        });

        lblUser.setText("login");

        lblPass.setText("Contraseña");

        txtPass.setText("aaaaaaaa");

        btnIngresar1.setText("Ingresar");
        btnIngresar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIngresar1ActionPerformed(evt);
            }
        });

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblModCred.setText("Modificar Credenciales");
        lblModCred.setEnabled(false);

        cbxOpcion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Login", "Contraseña", "Login y Contraseña", " " }));
        cbxOpcion.setEnabled(false);
        cbxOpcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxOpcionActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.setEnabled(false);
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnConfirmar.setText("Confirmar");
        btnConfirmar.setEnabled(false);
        btnConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmarActionPerformed(evt);
            }
        });

        rbtnModCred.setEnabled(false);
        rbtnModCred.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnModCredActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(44, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbxOpcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(btnCancelar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnConfirmar))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(rbtnModCred)
                        .addGap(18, 18, 18)
                        .addComponent(lblModCred, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(41, 41, 41))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblModCred)
                    .addComponent(rbtnModCred))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbxOpcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancelar)
                    .addComponent(btnConfirmar))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        btnSalir.setText("Salir");
        btnSalir.setEnabled(false);
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        btnLimpiar.setText("Limpiar Casillas ");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator2)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 454, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblPass)
                                    .addComponent(lblUser))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(txtPass, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(67, 67, 67)
                                        .addComponent(btnLimpiar))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(2, 2, 2)
                                        .addComponent(txtUser, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnIngresar1, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(41, 41, 41)))
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblUser)
                            .addComponent(txtUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnIngresar1)
                            .addComponent(btnSalir))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblPass))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 4, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 571, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    public boolean conexion(String ip,String puerto){
        boolean flag=true;
        
        System.out.println("ip: "+ ip + "puerto: " + puerto );
        
        try{
            int numPuertoRMIRegistry=0;
            String direccionIpRMIRegistry=ip;
            numPuertoRMIRegistry = Integer.parseInt(puerto);
            
            srvA= (GestionAdmAInt) UtilidadesRegistroCAdminA.obtenerObjRemoto(numPuertoRMIRegistry, direccionIpRMIRegistry,"ServidorA");
            
            
        }catch(Exception e){
           
            System.out.println("No se pudo registrar la conexion..." + flag);
            System.out.println(e.getMessage());
        } 
        
        if(srvA==null){
            flag = false;
        }
    
        return flag;
    }
    
    
    
    private void txtCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCodigoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCodigoActionPerformed
     private void activarGenerales(){
        txtConsola.setText("$ Opciones generales activadas");
        txtUser.setEnabled(!true);
        txtPass.setEnabled(!true);
        lblUser.setText("login");
        lblPass.setText("contraseña");
        btnSalir.setEnabled(true);
        btnCancelar.setSelected(false);
        cbxOpcion.setEnabled(!true);
        btnCancelar.setEnabled(!true);
        btnConfirmar.setEnabled(!true);
        rbtnModCred.setSelected(false);
        btnLimpiar.setEnabled(!true);
        //btnConUsuario.setEnabled(true);
        txtUser.setText("");
        txtPass.setText("");
        rbtnModCred.setEnabled(true);
        lblModCred.setEnabled(true);
        rbtnIngresarUsu.setEnabled(true);
        rbtnModificarUsu.setEnabled(true);
        rbtnEliminarUsu.setEnabled(true);
    
    }
    
    private void desactivarGenerales(){
        //btnConUsuario.setEnabled(!true);
        //btnIngresar1.setEnabled(true);
        btnSalir.setEnabled(false);
        btnSalir.setSelected(false);
        btnLimpiar.setEnabled(!true);
        txtUser.setEnabled(!true);
        txtPass.setEnabled(!true);
        rbtnModCred.setEnabled(false);
        lblModCred.setEnabled(false);
        rbtnIngresarUsu.setEnabled(false);
        rbtnModificarUsu.setEnabled(false);
        rbtnEliminarUsu.setEnabled(false);
        
        btnConfirmarCrud.setEnabled(!true);
        btnConfirmarCod.setEnabled(!true);
        txtConsola.setText("");
        
                
        lblCodigo.setEnabled(!true);
        txtCodigo.setEnabled(!true);
        
        lblNombre.setEnabled(!true);
        lblApellidos.setEnabled(!true);
        lblRol.setEnabled(!true);
        
        txtNombres.setEnabled(!true);
        txtApellidos.setEnabled(!true);
        cbxRol.setEnabled(!true);
        
        btnLimpiarCrud.setEnabled(!true);
    
    }
    
    private void activarIniciales(){
        txtUser.setEnabled(true);
        txtPass.setEnabled(true);
        btnIngresar1.setEnabled(true);
        btnLimpiar.setEnabled(true);
        
        //radiobuttons modificar
        rbtnCodigo.setVisible(!true);
        rbtnNombres.setVisible(!true);
        rbtnApellidos.setVisible(!true);
        rbtnRol.setVisible(!true);
        
        // segundo panel
        
    }
    private void txtNombresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombresActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombresActionPerformed

    private void txtApellidosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtApellidosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtApellidosActionPerformed

    private void txtUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUserActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUserActionPerformed

    private void btnIngresar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIngresar1ActionPerformed
        // TODO add your handling code here:
        
        boolean flag=false;// esta bandera es la que guarda si es verdadero o no el logi y la contraseña
        txtConsola.setText("");
         
        if(txtUser.getText().equals("") || txtPass.getText().equals("") ){
           
            txtConsola.setText("$ Error el usuario o la contraseña no pueden ser vacios");
            
        }else{
        
            //if(txtUser.getText().length()!=8 || txtPass.getText().length()!=8 ){
            if(txtUser.getText().length()<8 & txtUser.getText().length()>15 & txtPass.getText().length()<8 & txtPass.getText().length()>15){    
                txtConsola.setText("$ Error \n el usuario o la contraseña deben estar entre 15 y 8 caracteres"); 
            }else{
                adminA.setClave(txtPass.getText());
                adminA.setLogin(txtUser.getText());
                
                try {
                    flag=srvA.AccesoAdministrador(adminA);//consultar el usuario y contraseña en la flag;
                } catch (RemoteException ex) {
                    Logger.getLogger(GuiAdminA.class.getName()).log(Level.SEVERE, null, ex);
                }
                
                if(flag==false){
                    txtConsola.setText("$ Error usuario o contraseña no valido");
                    
                    txtUser.setText("");
                    txtPass.setText("");
                    
                }else{// ingreso al sistema
                   activarGenerales();
                   btnIngresar1.setEnabled(false);
                   txtConsola.setText("$ Ingreso al sistema exitoso!");
                   
                
                }
            }
                
        }
            
    }//GEN-LAST:event_btnIngresar1ActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        txtConsola.setText("$ Saliendo del sistema....");
        desactivarGenerales();  
        activarIniciales();
          
    }//GEN-LAST:event_btnSalirActionPerformed

    private void rbtnModCredActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnModCredActionPerformed
    int opcion;
    
     
        if(rbtnModCred.isSelected()){
            cbxOpcion.setEnabled(true);
            btnCancelar.setEnabled(true);
            btnConfirmar.setEnabled(true);
            desactivarGenerales();
            
            txtConsola.setText("$ Modificar Credenciales (Opciones generales desactivadas)\n  Ingrese las nuevas credenciales segun su seleccion \n  Presione confirmar para actualizar los datos \n  cancelar para deshacer el cambio");
            btnLimpiar.setEnabled(true);  
            
            opcion=cbxOpcion.getSelectedIndex();
            switch(opcion){
               case 0:
                    lblUser.setText("login (nuevo)");
                    lblPass.setText("contraseña");
                    txtUser.setEnabled(true);
                    txtPass.setEnabled(!true);
                   
                    break;
                case 1:
                    lblUser.setText("login");
                    lblPass.setText("contraseña (nueva)");
                    txtPass.setEnabled(true);
                    txtUser.setEnabled(!true);
                    break;
                case 2:
                    lblUser.setText("login (nuevo)");
                    lblPass.setText("contraseña (nueva)");
                    txtUser.setEnabled(true);
                    txtPass.setEnabled(true);
                    break;
            }
        
        }else{
            txtConsola.setText("");
            txtConsola.setText("$ Opciones generales activadas");
            activarGenerales();
        
        
        }
                              
    }//GEN-LAST:event_rbtnModCredActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:
         // TODO add your handling code here:
      txtConsola.setText("");
      rbtnIngresarUsu.setSelected(false);
      rbtnModificarUsu.setSelected(false);
      rbtnEliminarUsu.setSelected(false);
      //btnConUsuario.setEnabled(true);
      activarGenerales();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        // TODO add your handling code here:
         // TODO add your handling code here
         
        btnLimpiar.setSelected(false);
        txtUser.setText("");
        txtPass.setText("");
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void cbxOpcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxOpcionActionPerformed
        // TODO add your handling code here:
        int opcion;
        opcion=cbxOpcion.getSelectedIndex();
            switch(opcion){
                case 0:
                    lblUser.setText("login (nuevo)");
                    lblPass.setText("contraseña");
                    txtUser.setEnabled(true);
                    txtPass.setEnabled(!true);
                   
                    break;
                case 1:
                    lblUser.setText("login");
                    lblPass.setText("contraseña (nueva)");
                    txtPass.setEnabled(true);
                    txtUser.setEnabled(!true);
                    break;
                case 2:
                    lblUser.setText("login (nuevo)");
                    lblPass.setText("contraseña (nueva)");
                    txtUser.setEnabled(true);
                    txtPass.setEnabled(true);
                    break;
            }
    }//GEN-LAST:event_cbxOpcionActionPerformed

    private void btnConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmarActionPerformed
        // TODO add your handling code here:
        boolean flag=false;
        String antiguo=adminA.getLogin();
        btnConfirmar.setSelected(false);
        rbtnIngresarUsu.setSelected(false);
        rbtnModificarUsu.setSelected(false);
         rbtnEliminarUsu.setSelected(false);
        
        switch(cbxOpcion.getSelectedIndex()){
            case 0:
        
                try {
                    flag=srvA.modificarCredenciales(antiguo,txtUser.getText(),"",cbxOpcion.getSelectedIndex());
                } catch (RemoteException ex) {
                    Logger.getLogger(GuiAdminA.class.getName()).log(Level.SEVERE, null, ex);
                }
                if(!flag){
                    txtConsola.setText("$ Error \n  El login debe estar entre 8 y 15 caracteres");
                }else{
                    adminA.setLogin(txtUser.getText());
                    txtConsola.setText("$ Login modificado");
                }
                
                break;
            case 1:
                try {
                    flag=srvA.modificarCredenciales(antiguo,"",txtPass.getText(),cbxOpcion.getSelectedIndex());
                } catch (RemoteException ex) {
                    Logger.getLogger(GuiAdminA.class.getName()).log(Level.SEVERE, null, ex);
                }
                if(!flag){
                    txtConsola.setText("$ Error \n  La contraseña debe estar entre 8 y 15 caracteres");
                }else{
                    adminA.setClave(txtPass.getText());
                    txtConsola.setText("$ contraseña modificado");
                }
                break;
            case 2:
                try {
                    flag=srvA.modificarCredenciales(antiguo,txtUser.getText(),txtPass.getText(),cbxOpcion.getSelectedIndex());
                } catch (RemoteException ex) {
                    Logger.getLogger(GuiAdminA.class.getName()).log(Level.SEVERE, null, ex);
                }
                if(!flag){
                    txtConsola.setText("$ Error \n  El login y contraseña debe estar entre 8 y 15 caracteres");
                }else{
                    adminA.setLogin(txtUser.getText());
                    adminA.setClave(txtPass.getText());
                    txtConsola.setText("$ Login y contraseña modificado");
                }
                break;
        
        
        
        }
        
        
        txtUser.setText("");
        txtPass.setText("");
    }//GEN-LAST:event_btnConfirmarActionPerformed

    private void rbtnIngresarUsuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnIngresarUsuActionPerformed
        // TODO add your handling code here:
        txtConsola.setText("$  Ingresar usuario \n  Rellene los campos \n"+concatenarCodigos());
        rbtnEliminarUsu.setSelected(false);
        rbtnModificarUsu.setSelected(false);
        rbtnIngresarUsu.setSelected(true);
        
        lblCodigo.setEnabled(true);
        lblNombre.setEnabled(true);
        lblApellidos.setEnabled(true);
        lblRol.setEnabled(true);
        
        //radiobuttons
        rbtnCodigo.setVisible(!true);
        rbtnNombres.setVisible(!true);
        rbtnApellidos.setVisible(!true);
        rbtnRol.setVisible(!true);
        
        txtCodigo.setEnabled(true);
        txtNombres.setEnabled(true);
        txtApellidos.setEnabled(true);
        cbxRol.setEnabled(true);
        
        btnConfirmarCod.setEnabled(!true);
        btnLimpiarCrud.setEnabled(true);
        btnConfirmarCrud.setEnabled(true);
        
        txtNombres.setText("");
        txtApellidos.setText("");
        txtCodigo.setText("");
        
        
    }//GEN-LAST:event_rbtnIngresarUsuActionPerformed
    private void reiniciarModificar(){
         // TODO add your handling code here:
        antiguo="";
        btnConfirmarCrud.setEnabled(!true);
        btnConfirmarCod.setEnabled(true);
        
        rbtnModificarUsu.setSelected(true);
        rbtnIngresarUsu.setSelected(false);
        rbtnEliminarUsu.setSelected(false);
        
        lblCodigo.setEnabled(true);
        txtCodigo.setEnabled(true);
        
        lblNombre.setEnabled(!true);
        lblApellidos.setEnabled(!true);
        lblRol.setEnabled(!true);
        
        txtNombres.setEnabled(!true);
        txtApellidos.setEnabled(!true);
        cbxRol.setEnabled(!true);
        
         //radiobuttons
        rbtnCodigo.setVisible(true);
        rbtnNombres.setVisible(true);
        rbtnApellidos.setVisible(true);
        rbtnRol.setVisible(true);
        
        rbtnCodigo.setEnabled(!true);
        rbtnNombres.setEnabled(!true);
        rbtnApellidos.setEnabled(!true);
        rbtnRol.setEnabled(!true);

        txtNombres.setText("");
        txtApellidos.setText("");
        txtCodigo.setText("");
        rbtnCodigo.setSelected(!true);
        rbtnNombres.setSelected(!true);
        rbtnApellidos.setSelected(!true);
        rbtnRol.setSelected(!true);
    
    }
    private void rbtnModificarUsuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnModificarUsuActionPerformed
        txtConsola.setText("$  Modificar usuario \n  Confirme el codigo que desea modificar \n"+concatenarCodigos());

        reiniciarModificar();


    }//GEN-LAST:event_rbtnModificarUsuActionPerformed
    private void reiniciarEliminar(){
        btnConfirmarCrud.setEnabled(!true);
        btnConfirmarCod.setEnabled(true);
        
        rbtnIngresarUsu.setSelected(false);
        rbtnModificarUsu.setSelected(false);
        rbtnEliminarUsu.setSelected(true);
        
        lblCodigo.setEnabled(true);
        txtCodigo.setEnabled(true);
        
        lblNombre.setEnabled(!true);
        lblApellidos.setEnabled(!true);
        lblRol.setEnabled(!true);
        
        txtNombres.setEnabled(!true);
        txtApellidos.setEnabled(!true);
        cbxRol.setEnabled(!true);
        
         //radiobuttons
        rbtnCodigo.setVisible(!true);
        rbtnNombres.setVisible(!true);
        rbtnApellidos.setVisible(!true);
        rbtnRol.setVisible(!true);
        
        rbtnCodigo.setEnabled(!true);
        rbtnNombres.setEnabled(!true);
        rbtnApellidos.setEnabled(!true);
        rbtnRol.setEnabled(!true);

        txtNombres.setText("");
        txtApellidos.setText("");
        txtCodigo.setText("");
        rbtnCodigo.setSelected(!true);
        rbtnNombres.setSelected(!true);
        rbtnApellidos.setSelected(!true);
        rbtnRol.setSelected(!true);

    }
    private void rbtnEliminarUsuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnEliminarUsuActionPerformed
        // TODO add your handling code here:
        txtConsola.setText("$  Eliminar usuario \n  Confirme el codigo que desea Eliminar \n"+concatenarCodigos());
        reiniciarEliminar();
    }//GEN-LAST:event_rbtnEliminarUsuActionPerformed
    
    private String concatenarCodigos() {
        String cadena="$ Codigos    nombres    apellidos    rol \n";
        ArrayList<UsuarioA> lista=null;
        try {
            lista=srvA.consultarUsuarios();
        } catch (RemoteException ex) {
            Logger.getLogger(GuiAdminA.class.getName()).log(Level.SEVERE, null, ex);
        }
       
        for (int i = 0; i <lista.size(); i++) {
          cadena=cadena + lista.get(i).getCodigo()+"   " +lista.get(i).getNombre() +"   "+lista.get(i).getApellidos() + "   "+ lista.get(i).getRol() + "\n";   
        }
       
       return cadena;
    
    }
    
    
    
    private void rbtnRolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnRolActionPerformed
        // TODO add your handling code here:
        lblRol.setEnabled(rbtnRol.isSelected());
        cbxRol.setEnabled(rbtnRol.isSelected());

    }//GEN-LAST:event_rbtnRolActionPerformed

    private void btnLimpiarCrudActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarCrudActionPerformed
        // TODO add your handling code here:
        btnLimpiarCrud.setSelected(false);
        txtCodigo.setText("");
        txtNombres.setText("");
        txtApellidos.setText("");    
    }//GEN-LAST:event_btnLimpiarCrudActionPerformed
    private void ingresar(){
        
        String nombres,codigo,apellidos;
        boolean flag=false;
        
        nombres=txtNombres.getText();
        apellidos=txtApellidos.getText();
        codigo=txtCodigo.getText();
        
        if(apellidos.equals("") || nombres.equals("") || codigo.equals("")){
            txtConsola.setText("$ Error ninguno de los campos puede estar vacio");
        
        }else{
            if(codigo.length()!=8){
                txtConsola.setText("$ Error el codigo debe ser de 8 caracteres");
            }else{
                UsuarioA user = null;
                switch(cbxRol.getSelectedIndex()){
                    case 0:
                        user = new UsuarioA(nombres,apellidos,"Administrativo",codigo);
                        break;
                    
                    case 1:
                        user = new UsuarioA(nombres,apellidos,"Profesor",codigo);
                        break;
                        
                    case 2:
                        user = new UsuarioA(nombres,apellidos,"Estudiante",codigo);
                        break;
                
                
                
                }
                
                try {
                    flag=srvA.RegistrarUsuario(user);
                } catch (RemoteException ex) {
                    Logger.getLogger(GuiAdminA.class.getName()).log(Level.SEVERE, null, ex);
                }
                
                
               if(!flag){
                 txtConsola.setText("$ Error el codigo ya existe");  
               } else{
                   txtNombres.setText("");
                   txtApellidos.setText("");
                   txtCodigo.setText("");
                   txtConsola.setText("$ Usuario registrado Correctamente.\n\n" + concatenarCodigos());
                   
               }
            }
        
        }
    }
    
        
        
    private void modificar(){
        boolean flag=false;
        String nombres,codigo,apellidos;   
        UsuarioA user = null;
        
        
        
        codigo=txtCodigo.getText();
        nombres=txtNombres.getText();
        apellidos=txtApellidos.getText();
        
      
        user= new UsuarioA();
 
        if(apellidos.equals("") || nombres.equals("") || codigo.equals("")){
            txtConsola.setText("$ Error ninguno de los campos puede estar vacio");

        }else{
            if(codigo.length()!=8){
                txtConsola.setText("$ Error el codigo debe ser de 8 caracteres");
            }else{

                switch(cbxRol.getSelectedIndex()){
                    case 0:
                        //user = new UsuarioA(nombres,apellidos,"Administrativo",codigo);
                        user.setNombre(nombres);
                        user.setApellidos(apellidos);
                        user.setCodigo(codigo);
                        user.setRol("Administrativo");
                        break;

                    case 1:
                        user.setNombre(nombres);
                        user.setApellidos(apellidos);
                        user.setCodigo(codigo);
                        user.setRol("Profesor");
                        break;

                    case 2:
                        user.setNombre(nombres);
                        user.setApellidos(apellidos);
                        user.setCodigo(codigo);
                        user.setRol("Estudiante");
                        break;



                }
                System.out.println("antiguo- "+antiguo);
                System.out.println("user "+ user.getNombre() + " " + user.getCodigo());
                try {
                    flag=srvA.ModificarUsuario(antiguo,user);
                    
                } catch (RemoteException ex) {
                    Logger.getLogger(GuiAdminA.class.getName()).log(Level.SEVERE, null, ex);
                }


                if(!flag){
                    txtConsola.setText("$ Error el codigo No se puede modificar");
                } else{
                    txtNombres.setText("");
                    txtApellidos.setText("");
                    txtCodigo.setText("");
                    reiniciarModificar();
                    txtConsola.setText("$ Usuario Modificado Correctamente.\n\n" + concatenarCodigos());

                }
            }

        }
    
    }
    
    private void eliminar(){
        int opcion;
        opcion=JOptionPane.showConfirmDialog(this,"Confirma que desea eliminar el codigo: " + txtCodigo.getText(),"¿ Eliminar ?",JOptionPane.YES_NO_OPTION);
        if(opcion==0){
            try {
                srvA.BorrarUsuario(txtCodigo.getText());
            } catch (RemoteException ex) {
                Logger.getLogger(GuiAdminA.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            txtConsola.setText("$ Usuario eliminado:  "+ txtCodigo.getText() + "\n\n" + concatenarCodigos());
            reiniciarEliminar();
            
        }else{
            txtConsola.setText("$  Eliminar usuario \n  Confirme el codigo que desea Eliminar \n"+concatenarCodigos());
            reiniciarEliminar();
        }
    }
    private void btnConfirmarCrudActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmarCrudActionPerformed
        // TODO add your handling code here:
        btnConfirmarCrud.setSelected(false);
        int opcion=-1;
        if(rbtnIngresarUsu.isSelected()){
            opcion=0;
        }
        if(rbtnModificarUsu.isSelected()){
            opcion=1;
        }
        if(rbtnEliminarUsu.isSelected()){
            opcion=2;
        }
        
        System.out.println("opcion:  "+ opcion );
        
        switch(opcion){
            
            case 0:
                ingresar();
                break;
            
            case 1:
                modificar();
                
                break;
            case 2:
                eliminar();
                break;
        
        
        }
        
        
    }//GEN-LAST:event_btnConfirmarCrudActionPerformed
    private void confirmarElim(){
        String codigo="";
        
        btnConfirmarCod.setEnabled(!true);
        
        codigo=txtCodigo.getText();
        
        try {
            if(srvA.buscarUsuario(codigo)==-1){
                txtConsola.setText("$ Error el usuario no existe \n\n" + concatenarCodigos());
                btnConfirmarCod.setEnabled(true);
                btnLimpiarCrud.setEnabled(true);
            }else{
                
                txtConsola.setText("$ Por favor confirmar para eliminar");
                
                lblCodigo.setEnabled(false);
                txtCodigo.setEnabled(false);
                btnLimpiarCrud.setEnabled(!true);
                btnConfirmarCrud.setEnabled(true);
                
            }
        } catch (RemoteException ex) {
            Logger.getLogger(GuiAdminA.class.getName()).log(Level.SEVERE, null, ex);
        }
    
    
    }
    private void confirmarMod(){
           String nombres,codigo,apellidos;
        boolean flag=false;
        int opcion=-1;
        
        codigo=txtCodigo.getText();
        
        
        
        try {
            if(srvA.buscarUsuario(codigo)==-1){
                txtConsola.setText("$ Error el usuario no existe");
                
            }else{
                lblCodigo.setEnabled(false);
                txtCodigo.setEnabled(false);
                UsuarioA user = srvA.soliciarUsuario(codigo);
                antiguo=user.getCodigo();
                rbtnCodigo.setVisible(true);
                rbtnNombres.setVisible(true);
                rbtnApellidos.setVisible(true);
                rbtnRol.setVisible(true);
         
                rbtnCodigo.setEnabled(true);
                rbtnNombres.setEnabled(true);
                rbtnApellidos.setEnabled(true);
                rbtnRol.setEnabled(true);
         
                btnConfirmarCod.setEnabled(!true);
                txtConsola.setText("$ Modificar Usuario con codigo:" + codigo+"\n  Active con los radio buttons los campos a modificar \n Presione Confirmar para realizar la modificacion");
                btnLimpiarCrud.setEnabled(true);
                btnConfirmarCrud.setEnabled(true);
                
                txtNombres.setText(user.getNombre());
                txtApellidos.setText(user.getApellidos());
                txtCodigo.setText(user.getCodigo());


                if(user.getRol().equals("Administrativo")) opcion=0;
                if(user.getRol().equals("Profesor")) opcion=1;
                if(user.getRol().equals("Estudiante")) opcion=2;

                cbxRol.setSelectedIndex(opcion);
                
               
                
            }
        } catch (RemoteException ex) {
            Logger.getLogger(GuiAdminA.class.getName()).log(Level.SEVERE, null, ex);
        }
    
    
    }
    private void btnConfirmarCodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmarCodActionPerformed
        // TODO add your handling code here:
         btnConfirmarCrud.setSelected(false);
         btnConfirmarCod.setSelected(false);
        int opcion=-1;
        if(rbtnEliminarUsu.isSelected()){
            opcion=0;
        }
        if(rbtnModificarUsu.isSelected()){
            opcion=1;
        }
        
        switch(opcion){
            
            case 0:
                confirmarElim();
                break;
            
            case 1:
                confirmarMod();
                
                break;
        
        
        
        }
        
        
     
    }//GEN-LAST:event_btnConfirmarCodActionPerformed

    private void rbtnCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnCodigoActionPerformed
        // TODO add your handling code here:
         lblCodigo.setEnabled(rbtnCodigo.isSelected());
         txtCodigo.setEnabled(rbtnCodigo.isSelected());
    }//GEN-LAST:event_rbtnCodigoActionPerformed

    private void rbtnNombresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnNombresActionPerformed
        // TODO add your handling code here:
        lblNombre.setEnabled(rbtnNombres.isSelected());
        txtNombres.setEnabled(rbtnNombres.isSelected());

    }//GEN-LAST:event_rbtnNombresActionPerformed

    private void rbtnApellidosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnApellidosActionPerformed
        // TODO add your handling code here:
         
        lblApellidos.setEnabled(rbtnApellidos.isSelected());
        txtApellidos.setEnabled(rbtnApellidos.isSelected());



    }//GEN-LAST:event_rbtnApellidosActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GuiAdminA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GuiAdminA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GuiAdminA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GuiAdminA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
               
                new  GuiAdminA().setVisible(false);
              
            }
        });
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton btnCancelar;
    private javax.swing.JToggleButton btnConfirmar;
    private javax.swing.JToggleButton btnConfirmarCod;
    private javax.swing.JToggleButton btnConfirmarCrud;
    private javax.swing.JButton btnIngresar1;
    private javax.swing.JToggleButton btnLimpiar;
    private javax.swing.JToggleButton btnLimpiarCrud;
    private javax.swing.JToggleButton btnSalir;
    private javax.swing.JComboBox<String> cbxOpcion;
    private javax.swing.JComboBox<String> cbxRol;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JLabel lblApellidos;
    private javax.swing.JLabel lblCodigo;
    private javax.swing.JLabel lblModCred;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JLabel lblPass;
    private javax.swing.JLabel lblRol;
    private javax.swing.JLabel lblUser;
    private javax.swing.JRadioButton rbtnApellidos;
    private javax.swing.JRadioButton rbtnCodigo;
    private javax.swing.JRadioButton rbtnEliminarUsu;
    private javax.swing.JRadioButton rbtnIngresarUsu;
    private javax.swing.JRadioButton rbtnModCred;
    private javax.swing.JRadioButton rbtnModificarUsu;
    private javax.swing.JRadioButton rbtnNombres;
    private javax.swing.JRadioButton rbtnRol;
    private javax.swing.JTextField txtApellidos;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextArea txtConsola;
    private javax.swing.JTextField txtNombres;
    private javax.swing.JTextField txtPass;
    private javax.swing.JTextField txtUser;
    // End of variables declaration//GEN-END:variables
}
